

CC = cl.exe



SRCDIR = ..\..\..\..\Modules\cdecimal
OBJDIR = obj
OBJS = $(OBJDIR)\basearith.obj    $(OBJDIR)\context.obj $(OBJDIR)\constants.obj \
       $(OBJDIR)\convolute.obj    $(OBJDIR)\crt.obj     $(OBJDIR)\mpdecimal.obj \
       $(OBJDIR)\difradix2.obj    $(OBJDIR)\error.obj   $(OBJDIR)\fnt.obj \
       $(OBJDIR)\fourstep.obj     $(OBJDIR)\io.obj      $(OBJDIR)\memory.obj \
       $(OBJDIR)\numbertheory.obj $(OBJDIR)\sixstep.obj $(OBJDIR)\transpose.obj \
       $(OBJDIR)\transpose3.obj


!if "$(MACHINE)" == "x64"
CFLAGS = /DCONFIG_64 /W3 /D_CRT_SECURE_NO_WARNINGS /nologo /MT /Ox /GS /EHsc
OBJS = $(OBJS) $(OBJDIR)\vcdiv64.obj
GMPLIB = "C:\Program Files\gmp\gmp.lib"
GMPINC = "C:\Program Files\gmp"
!endif

!if "$(MACHINE)" == "ansi64"
CFLAGS = /DCONFIG_32 /DANSI /W3 /D_CRT_SECURE_NO_WARNINGS /nologo /MT /Ox /GS /EHsc
GMPLIB = "C:\Program Files\gmp\gmp.lib"
GMPINC = "C:\Program Files\gmp"
!endif

!if "$(MACHINE)" == "ppro"
CFLAGS = /DCONFIG_32 /DPPRO /W3 /D_CRT_SECURE_NO_WARNINGS /nologo /MT /Ox /GS /EHsc
GMPLIB = "C:\Program Files (x86)\gmp\gmp.lib"
GMPINC = "C:\Program Files (x86)\gmp"
!endif

!if "$(MACHINE)" == "ansi"
CFLAGS = /DCONFIG_32 /DANSI /W3 /D_CRT_SECURE_NO_WARNINGS /nologo /MT /Ox /GS /EHsc
GMPLIB = "C:\Program Files (x86)\gmp\gmp.lib"
GMPINC = "C:\Program Files (x86)\gmp"
!endif

!if "$(MACHINE)" == "ansi-legacy"
CFLAGS = /DCONFIG_32 /DANSI /DLEGACY_COMPILER /W3 /D_CRT_SECURE_NO_WARNINGS /nologo /MT /Ox /GS /EHsc
GMPLIB = "C:\Program Files (x86)\gmp\gmp.lib"
GMPINC = "C:\Program Files (x86)\gmp"
!endif


default: runtest karatsuba_fnt karatsuba_fnt2 ppro_mulmod test_transpose
gmp:     default mpd_mpz_add mpd_mpz_divmod mpd_mpz_mul mpd_mpz_sub


# dectest
runtest:\
Makefile runtest.c $(SRCDIR)\io.h     $(SRCDIR)\mpdecimal.h $(SRCDIR)\memory.h \
                   $(SRCDIR)\mptest.h $(SRCDIR)\mptypes.h   $(OBJS)
	$(CC) -I$(SRCDIR) $(CFLAGS) /Foruntest runtest.c $(OBJS)

# extended tests
karatsuba_fnt:\
Makefile karatsuba_fnt.c $(SRCDIR)\mpdecimal.h  $(SRCDIR)\mptypes.h \
                         $(SRCDIR)\mptest.h     $(OBJS)
	$(CC) -I$(SRCDIR) $(CFLAGS) /Fokaratsuba_fnt karatsuba_fnt.c $(OBJS)
karatsuba_fnt2:\
Makefile karatsuba_fnt2.c $(SRCDIR)\mpdecimal.h  $(SRCDIR)\mptypes.h \
                          $(SRCDIR)\mptest.h     $(OBJS)
	$(CC) -I$(SRCDIR) $(CFLAGS) /Fokaratsuba_fnt2 karatsuba_fnt2.c $(OBJS)
ppro_mulmod:\
Makefile ppro_mulmod.c $(SRCDIR)\mpdecimal.h    $(SRCDIR)\constants.h \
                       $(SRCDIR)\numbertheory.h $(SRCDIR)\mptypes.h \
                       $(SRCDIR)\mptest.h       $(SRCDIR)\umodarith.h \
                       $(SRCDIR)\typearith.h    $(OBJS)
	$(CC) -I$(SRCDIR) $(CFLAGS) /Foppro_mulmod ppro_mulmod.c $(OBJS)
test_transpose:\
Makefile test_transpose.c $(SRCDIR)\bits.h      $(SRCDIR)\mpdecimal.h \
                          $(SRCDIR)\constants.h $(SRCDIR)\mptypes.h \
                          $(SRCDIR)\mptest.h    $(SRCDIR)\typearith.h \
                          $(SRCDIR)\transpose.h $(OBJS)
	$(CC) -I$(SRCDIR) $(CFLAGS) /Fotest_transpose test_transpose.c $(OBJS)

# gmp tests
mpd_mpz_add:\
Makefile mpd_mpz_add.c $(SRCDIR)\mpdecimal.h $(SRCDIR)\mptypes.h $(OBJS)
	$(CC) -I$(SRCDIR) -I$(GMPINC) $(CFLAGS) /Fompd_mpz_add mpd_mpz_add.c $(OBJS) $(GMPLIB)
mpd_mpz_divmod:\
Makefile mpd_mpz_divmod.c $(SRCDIR)\mpdecimal.h $(SRCDIR)\mptypes.h $(OBJS)
	$(CC) -I$(SRCDIR) -I$(GMPINC) $(CFLAGS) /Fompd_mpz_divmod mpd_mpz_divmod.c $(OBJS) $(GMPLIB)
mpd_mpz_mul:\
Makefile mpd_mpz_mul.c $(SRCDIR)\mpdecimal.h $(SRCDIR)\mptypes.h $(OBJS)
	$(CC) -I$(SRCDIR) -I$(GMPINC) $(CFLAGS) /Fompd_mpz_mul mpd_mpz_divmod.c $(OBJS) $(GMPLIB)
mpd_mpz_sub:\
Makefile mpd_mpz_sub.c $(SRCDIR)\mpdecimal.h $(SRCDIR)\mptypes.h $(OBJS)
	$(CC) -I$(SRCDIR) -I$(GMPINC) $(CFLAGS) /Fompd_mpz_sub mpd_mpz_sub.c $(OBJS) $(GMPLIB)


$(OBJDIR)\basearith.obj:\
Makefile $(SRCDIR)\basearith.c $(SRCDIR)\constants.h $(SRCDIR)\mpdecimal.h \
         $(SRCDIR)\memory.h    $(SRCDIR)\typearith.h $(SRCDIR)\basearith.h
	$(CC) $(CFLAGS) -c $(SRCDIR)\basearith.c /Fo$(OBJDIR)\basearith.obj

$(OBJDIR)\constants.obj:\
Makefile $(SRCDIR)\constants.c $(SRCDIR)\mpdecimal.h $(SRCDIR)\constants.h
	$(CC) $(CFLAGS) -c $(SRCDIR)\constants.c /Fo$(OBJDIR)\constants.obj

$(OBJDIR)\context.obj:\
Makefile $(SRCDIR)\context.c $(SRCDIR)\mpdecimal.h
	$(CC) $(CFLAGS) -c $(SRCDIR)\context.c /Fo$(OBJDIR)\context.obj

$(OBJDIR)\convolute.obj:\
Makefile $(SRCDIR)\convolute.c    $(SRCDIR)\bits.h      $(SRCDIR)\mpdecimal.h \
         $(SRCDIR)\constants.h    $(SRCDIR)\fnt.h       $(SRCDIR)\fourstep.h \
         $(SRCDIR)\numbertheory.h $(SRCDIR)\sixstep.h   $(SRCDIR)\umodarith.h \
         $(SRCDIR)\typearith.h    $(SRCDIR)\convolute.h $(SRCDIR)\vccompat.h
	$(CC) $(CFLAGS) -c $(SRCDIR)\convolute.c /Fo$(OBJDIR)\convolute.obj

$(OBJDIR)\crt.obj:\
Makefile $(SRCDIR)\crt.c       $(SRCDIR)\mpdecimal.h $(SRCDIR)\numbertheory.h \
         $(SRCDIR)\constants.h $(SRCDIR)\umodarith.h $(SRCDIR)\typearith.h \
         $(SRCDIR)\crt.h
	$(CC) $(CFLAGS) -c $(SRCDIR)\crt.c /Fo$(OBJDIR)\crt.obj

$(OBJDIR)\difradix2.obj:\
Makefile $(SRCDIR)\difradix2.c    $(SRCDIR)\bits.h      $(SRCDIR)\mpdecimal.h \
         $(SRCDIR)\numbertheory.h $(SRCDIR)\constants.h $(SRCDIR)\umodarith.h \
         $(SRCDIR)\typearith.h    $(SRCDIR)\difradix2.h $(SRCDIR)\vccompat.h
	$(CC) $(CFLAGS) -c $(SRCDIR)\difradix2.c /Fo$(OBJDIR)\difradix2.obj

$(OBJDIR)\error.obj:\
Makefile $(SRCDIR)\error.c $(SRCDIR)\mpdecimal.h
	$(CC) $(CFLAGS) -c $(SRCDIR)\error.c /Fo$(OBJDIR)\error.obj

$(OBJDIR)\fnt.obj:\
Makefile $(SRCDIR)\fnt.c       $(SRCDIR)\bits.h         $(SRCDIR)\mpdecimal.h \
         $(SRCDIR)\difradix2.h $(SRCDIR)\numbertheory.h $(SRCDIR)\constants.h \
         $(SRCDIR)\fnt.h       $(SRCDIR)\vccompat.h
	$(CC) $(CFLAGS) -c $(SRCDIR)\fnt.c /Fo$(OBJDIR)\fnt.obj

$(OBJDIR)\fourstep.obj:\
Makefile $(SRCDIR)\fourstep.c  $(SRCDIR)\mpdecimal.h $(SRCDIR)\numbertheory.h \
         $(SRCDIR)\constants.h $(SRCDIR)\sixstep.h   $(SRCDIR)\transpose.h \
         $(SRCDIR)\umodarith.h $(SRCDIR)\typearith.h $(SRCDIR)\fourstep.h
	$(CC) $(CFLAGS) -c $(SRCDIR)\fourstep.c /Fo$(OBJDIR)\fourstep.obj

$(OBJDIR)\io.obj:\
Makefile $(SRCDIR)\io.c        $(SRCDIR)\bits.h   $(SRCDIR)\mpdecimal.h \
         $(SRCDIR)\constants.h $(SRCDIR)\memory.h $(SRCDIR)\typearith.h \
         $(SRCDIR)\io.h        $(SRCDIR)\vccompat.h
	$(CC) $(CFLAGS) -c $(SRCDIR)\io.c /Fo$(OBJDIR)\io.obj

$(OBJDIR)\memory.obj:\
Makefile $(SRCDIR)\memory.c $(SRCDIR)\mpdecimal.h $(SRCDIR)\typearith.h \
         $(SRCDIR)\memory.h
	$(CC) $(CFLAGS) -c $(SRCDIR)\memory.c /Fo$(OBJDIR)\memory.obj

$(OBJDIR)\mpdecimal.obj:\
Makefile $(SRCDIR)\mpdecimal.c $(SRCDIR)\basearith.h $(SRCDIR)\mpdecimal.h \
         $(SRCDIR)\typearith.h $(SRCDIR)\bits.h      $(SRCDIR)\convolute.h \
         $(SRCDIR)\crt.h       $(SRCDIR)\memory.h    $(SRCDIR)\umodarith.h \
         $(SRCDIR)\constants.h $(SRCDIR)\mptypes.h   $(SRCDIR)\vccompat.h
	$(CC) $(CFLAGS) -c $(SRCDIR)\mpdecimal.c /Fo$(OBJDIR)\mpdecimal.obj

$(OBJDIR)\numbertheory.obj:\
Makefile $(SRCDIR)\numbertheory.c $(SRCDIR)\bits.h      $(SRCDIR)\mpdecimal.h \
         $(SRCDIR)\umodarith.h    $(SRCDIR)\constants.h $(SRCDIR)\typearith.h \
         $(SRCDIR)\numbertheory.h $(SRCDIR)\vccompat.h 
	$(CC) $(CFLAGS) -c $(SRCDIR)\numbertheory.c /Fo$(OBJDIR)\numbertheory.obj

$(OBJDIR)\sixstep.obj:\
Makefile $(SRCDIR)\sixstep.c   $(SRCDIR)\bits.h         $(SRCDIR)\mpdecimal.h \
         $(SRCDIR)\difradix2.h $(SRCDIR)\numbertheory.h $(SRCDIR)\constants.h \
         $(SRCDIR)\mptypes.h   $(SRCDIR)\transpose.h    $(SRCDIR)\umodarith.h \
         $(SRCDIR)\typearith.h $(SRCDIR)\sixstep.h      $(SRCDIR)\vccompat.h
	$(CC) $(CFLAGS) -c $(SRCDIR)\sixstep.c /Fo$(OBJDIR)\sixstep.obj

$(OBJDIR)\transpose.obj:\
Makefile $(SRCDIR)\transpose.c $(SRCDIR)\bits.h      $(SRCDIR)\mpdecimal.h \
         $(SRCDIR)\constants.h $(SRCDIR)\typearith.h $(SRCDIR)\transpose.h \
         $(SRCDIR)\vccompat.h
	$(CC) $(CFLAGS) -c $(SRCDIR)\transpose.c /Fo$(OBJDIR)\transpose.obj

$(OBJDIR)\transpose3.obj:\
Makefile $(SRCDIR)\transpose3.c $(SRCDIR)\bits.h      $(SRCDIR)\mpdecimal.h \
         $(SRCDIR)\constants.h  $(SRCDIR)\typearith.h $(SRCDIR)\transpose.h \
         $(SRCDIR)\vccompat.h
	$(CC) $(CFLAGS) -c $(SRCDIR)\transpose3.c /Fo$(OBJDIR)\transpose3.obj

$(OBJDIR)\vcdiv64.obj:\
Makefile $(SRCDIR)\vcdiv64.asm
	ml64 /Fo$(OBJDIR)\vcdiv64.obj /c /Cx $(SRCDIR)\vcdiv64.asm


FORCE:

clean: FORCE
	-@if exist *.obj del *.obj
	-@if exist obj\*.obj del obj\*.obj
	-@if exist *.dll del *.dll
	-@if exist *.exp del *.exp
	-@if exist *.lib del *.lib
	-@if exist *.ilk del *.ilk
	-@if exist *.pdb del *.pdb
	-@if exist *.pgc del *.pgc
	-@if exist *.pgd del *.pgd
	-@if exist *.manifest del *.manifest
	-@if exist *.exe del *.exe


