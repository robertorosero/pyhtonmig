+++++++++++
Branch News
+++++++++++

If a comment lacks an explicit revision number then use ``svn blame`` on this
file to find out what revision number introduced the feature.

Core and builtins
-----------------

* rev. ????: Added a delegate for import that calls sys.import_.

* rev. 51679: Remove the constructor for the 'code' type.  This means instances
  of the 'code' type cannot be created directly.  You must use the new
  objcap.code_new() factory function to create instances.

* rev. 51672: Remove the initializer from the 'file' type.  Constructing an
  isntance now takes no arguments and makes it an empty instance.  To attach a
  file to a 'file' instance, use objcap.file_init().

  This changes how subclassing 'file' needs to be handled.  First,
  file.__new__() must be called with no arguments.  Second, in the subclass'
  __init__(), call objcap.file_init() with 'self' as the first argument and
  then the usual arguments for opening a file.

* rev. 51392: Introduce objcap module to hold removed functions/methods.  Begin
  with moving object.__subclasses__().


Extension Modules
-----------------

* rev. 51958: Fix up handling exceptions.  Added exc_matches() exception.

* rev. 51944: Change sys_dict to a module since that dict is cached somewhere.

* rev. 51941: Changed exception raised by interpreter.Interpreter().execute()
  to RuntimError when something goes bad.  Also added the redirect_output()
  method.

* rev. 51914: Changed accessing the built-in namespace dict from an attribute
  to a function call.  This is because the dict is cached in the execution
  frame created when the interpreter is first created and thus setting the dict
  to another dict has no affect.

* rev. 51880: Add access to the 'sys' modules data dict to Interpreter objects.

* rev. 51875: Introduced the interpreter module.


Library
-------

* rev. 53333: External definition of importlib (from the sandbox) added.
