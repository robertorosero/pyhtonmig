#ifndef Py_ASDL_H
#define Py_ASDL_H

typedef PyObject * identifier;
typedef PyObject * string;
typedef PyObject * object;

#include <stdbool.h>

/* It would be nice if the code generated by asdl_c.py was completely
   independent of Python, but it is a goal the requires too much work
   at this stage.  So, for example, I'll represent identifiers as
   interned Python strings.
*/

/* A sequence should be typed so that its use can be typechecked. */

typedef struct {
    int size;
    int used;
    void **elements;
} asdl_seq;

asdl_seq *asdl_seq_new(int size);
void *asdl_seq_get(asdl_seq *seq, int offset);
int asdl_seq_append(asdl_seq *seq, void *elt);
void asdl_seq_free(asdl_seq *);

#define asdl_seq_LEN(S) ((S)->used)

#endif /* !Py_ASDL_H */
