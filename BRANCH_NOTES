=======
Purpose
=======
Attempt to develop some form of security model for Python.

=====
Usage
=====
1. Build Python as normal.
2. Run ``build_secure_py.sh`` to build ``secure_python.exe``.

======
Status
======
* Fix failing tests.
    - test_xmlrpc
* Turn on whitelisting.
    - Verify injecting 'open' into importlib works.
* Write tests.
    - Import
        + Delegate protects importlib.
        + Whitelisting works.
            * Name fall-through to alternate implementation.
        + '.hidden' cannot be imported.
        + Removed modules cannot be imported (unless whitelisted).
    - Built-in namespace properly cleansed.
        + Nothing exposed through __builtin__ or __builtins__.
    - Types crippled.
        + file
        + code
* Fix 'sys' module.
    - test_xmlrpc relies on reloading sys to get setdefaultencoding, but hack
      to allow re-import of sys doesn't let this work.

==========
References
==========
* securing_python.txt
* http://docs.google.com/Doc?id=dg7fctr4_4d8tdbq
* http://www.cs.ubc.ca/~drifty/papers/python_security.pdf
